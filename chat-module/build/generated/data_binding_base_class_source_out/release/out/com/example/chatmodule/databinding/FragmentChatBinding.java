// Generated by view binder compiler. Do not edit!
package com.example.chatmodule.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.coordinatorlayout.widget.CoordinatorLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.chatmodule.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.button.MaterialButton;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentChatBinding implements ViewBinding {
  @NonNull
  private final CoordinatorLayout rootView;

  @NonNull
  public final MaterialButton buttonAttachment;

  @NonNull
  public final TextInputEditText editTextMessage;

  @NonNull
  public final FloatingActionButton fabSend;

  @NonNull
  public final LinearLayout layoutEmptyState;

  @NonNull
  public final RecyclerView recyclerViewMessages;

  @NonNull
  public final TextInputLayout textInputLayoutMessage;

  @NonNull
  public final MaterialToolbar toolbar;

  private FragmentChatBinding(@NonNull CoordinatorLayout rootView,
      @NonNull MaterialButton buttonAttachment, @NonNull TextInputEditText editTextMessage,
      @NonNull FloatingActionButton fabSend, @NonNull LinearLayout layoutEmptyState,
      @NonNull RecyclerView recyclerViewMessages, @NonNull TextInputLayout textInputLayoutMessage,
      @NonNull MaterialToolbar toolbar) {
    this.rootView = rootView;
    this.buttonAttachment = buttonAttachment;
    this.editTextMessage = editTextMessage;
    this.fabSend = fabSend;
    this.layoutEmptyState = layoutEmptyState;
    this.recyclerViewMessages = recyclerViewMessages;
    this.textInputLayoutMessage = textInputLayoutMessage;
    this.toolbar = toolbar;
  }

  @Override
  @NonNull
  public CoordinatorLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentChatBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_chat, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentChatBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonAttachment;
      MaterialButton buttonAttachment = ViewBindings.findChildViewById(rootView, id);
      if (buttonAttachment == null) {
        break missingId;
      }

      id = R.id.editTextMessage;
      TextInputEditText editTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (editTextMessage == null) {
        break missingId;
      }

      id = R.id.fabSend;
      FloatingActionButton fabSend = ViewBindings.findChildViewById(rootView, id);
      if (fabSend == null) {
        break missingId;
      }

      id = R.id.layoutEmptyState;
      LinearLayout layoutEmptyState = ViewBindings.findChildViewById(rootView, id);
      if (layoutEmptyState == null) {
        break missingId;
      }

      id = R.id.recyclerViewMessages;
      RecyclerView recyclerViewMessages = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewMessages == null) {
        break missingId;
      }

      id = R.id.textInputLayoutMessage;
      TextInputLayout textInputLayoutMessage = ViewBindings.findChildViewById(rootView, id);
      if (textInputLayoutMessage == null) {
        break missingId;
      }

      id = R.id.toolbar;
      MaterialToolbar toolbar = ViewBindings.findChildViewById(rootView, id);
      if (toolbar == null) {
        break missingId;
      }

      return new FragmentChatBinding((CoordinatorLayout) rootView, buttonAttachment,
          editTextMessage, fabSend, layoutEmptyState, recyclerViewMessages, textInputLayoutMessage,
          toolbar);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
