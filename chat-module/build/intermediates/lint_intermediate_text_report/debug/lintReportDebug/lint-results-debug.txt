/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/AndroidManifest.xml:11: Warning: READ_EXTERNAL_STORAGE is deprecated (and is not granted) when targeting Android 13+. If you need to query or interact with MediaStore or media files on the shared storage, you should instead use one or more new storage permissions: READ_MEDIA_IMAGES, READ_MEDIA_VIDEO or READ_MEDIA_AUDIO. [ScopedStorage]
    <uses-permission android:name="android.permission.READ_EXTERNAL_STORAGE" />
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/AndroidManifest.xml:12: Warning: WRITE_EXTERNAL_STORAGE is deprecated (and is not granted) when targeting Android 13+. If you need to write to shared storage, use the MediaStore.createWriteRequest intent. [ScopedStorage]
    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
                                   ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "ScopedStorage":
   Scoped storage is enforced on Android 10+ (or Android 11+ if using
   requestLegacyExternalStorage). In particular, WRITE_EXTERNAL_STORAGE will
   no longer provide write access to all files; it will provide the equivalent
   of READ_EXTERNAL_STORAGE instead.

   As of Android 13, if you need to query or interact with MediaStore or media
   files on the shared storage, you should be using instead one or more new
   storage permissions:
   * android.permission.READ_MEDIA_IMAGES
   * android.permission.READ_MEDIA_VIDEO
   * android.permission.READ_MEDIA_AUDIO

   and then add maxSdkVersion="33" to the older permission. See the developer
   guide for how to do this:
   https://developer.android.com/about/versions/13/behavior-changes-13#granula
   r-media-permissions

   The MANAGE_EXTERNAL_STORAGE permission can be used to manage all files, but
   it is rarely necessary and most apps on Google Play are not allowed to use
   it. Most apps should instead migrate to use scoped storage. To modify or
   delete files, apps should request write access from the user as described
   at https://goo.gle/android-mediastore-createwriterequest.

   To learn more, read these resources: Play policy:
   https://goo.gle/policy-storage-help Allowable use cases:
   https://goo.gle/policy-storage-usecases

   https://goo.gle/android-storage-usecases

/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/java/com/example/chatmodule/ui/compose/ChatScreen.kt:70: Warning: Modifier parameter should be the first optional parameter [ModifierParameter from androidx.compose.ui]
    modifier: Modifier = Modifier
    ~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/java/com/example/chatmodule/ui/compose/MessageItem.kt:57: Warning: Modifier parameter should be the first optional parameter [ModifierParameter from androidx.compose.ui]
    modifier: Modifier = Modifier
    ~~~~~~~~

   Explanation for issues of type "ModifierParameter":
   The first (or only) Modifier parameter in a Composable function should
   follow the following rules:
   - Be named modifier
   - Have a type of Modifier
   - Either have no default value, or have a default value of Modifier
   - If optional, be the first optional parameter in the parameter list

   Vendor: Jetpack Compose
   Identifier: androidx.compose.ui
   Feedback: https://issuetracker.google.com/issues/new?component=612128

/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/item_message.xml:174: Warning: This tag and its children can be replaced by one <TextView/> and a compound drawable [UseCompoundDrawables]
        <LinearLayout
         ~~~~~~~~~~~~

   Explanation for issues of type "UseCompoundDrawables":
   A LinearLayout which contains an ImageView and a TextView can be more
   efficiently handled as a compound drawable (a single TextView, using the
   drawableTop, drawableLeft, drawableRight and/or drawableBottom attributes
   to draw one or more images adjacent to the text).

   If the two widgets are offset from each other with margins, this can be
   replaced with a drawablePadding attribute.

   There's a lint quickfix to perform this conversion in the Eclipse plugin.

/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/item_message.xml:73: Warning: Missing contentDescription attribute on image [ContentDescription]
                    <ImageView
                     ~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/item_message.xml:92: Warning: Missing contentDescription attribute on image [ContentDescription]
                        <ImageView
                         ~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/item_message.xml:135: Warning: Missing contentDescription attribute on image [ContentDescription]
                        <ImageView
                         ~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/item_message.xml:191: Warning: Missing contentDescription attribute on image [ContentDescription]
            <ImageView
             ~~~~~~~~~

   Explanation for issues of type "ContentDescription":
   Non-textual widgets like ImageViews and ImageButtons should use the
   contentDescription attribute to specify a textual description of the widget
   such that screen readers and other accessibility tools can adequately
   describe the user interface.

   Note that elements in application screens that are purely decorative and do
   not provide any content or enable a user action should not have
   accessibility content descriptions. In this case, set their descriptions to
   @null. If your app's minSdkVersion is 16 or higher, you can instead set
   these graphical elements' android:importantForAccessibility attributes to
   no.

   Note that for text fields, you should not set both the hint and the
   contentDescription attributes since the hint will never be shown. Just set
   the hint.

   https://developer.android.com/guide/topics/ui/accessibility/apps#special-cases

/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/fragment_chat.xml:53: Warning: Hardcoded string "No messages yet", should use @string resource [HardcodedText]
                android:text="No messages yet"
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/fragment_chat.xml:61: Warning: Hardcoded string "Start a conversation by sending a message", should use @string resource [HardcodedText]
                android:text="Start a conversation by sending a message"
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/fragment_chat.xml:106: Warning: Hardcoded string "Type a message...", should use @string resource [HardcodedText]
                    android:hint="Type a message..."
                    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/fragment_chat.xml:120: Warning: Hardcoded string "Send message", should use @string resource [HardcodedText]
                android:contentDescription="Send message"
                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/Users/imac/AndroidStudioProjects/ChatModuleSDK/chat-module/src/main/res/layout/item_message.xml:151: Warning: Hardcoded string "Audio message", should use @string resource [HardcodedText]
                                android:text="Audio message"
                                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~

   Explanation for issues of type "HardcodedText":
   Hardcoding text attributes directly in layout files is bad for several
   reasons:

   * When creating configuration variations (for example for landscape or
   portrait) you have to repeat the actual text (and keep it up to date when
   making changes)

   * The application cannot be translated to other languages by just adding
   new translations for existing string resources.

   There are quickfixes to automatically extract this hardcoded string into a
   resource lookup.

0 errors, 14 warnings
